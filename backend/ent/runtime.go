// Code generated by ent, DO NOT EDIT.

package ent

import (
	"SmartWatch_Project/ent/event"
	"SmartWatch_Project/ent/schema"
	"SmartWatch_Project/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	eventFields := schema.Event{}.Fields()
	_ = eventFields
	// eventDescUnixTime is the schema descriptor for unixTime field.
	eventDescUnixTime := eventFields[0].Descriptor()
	// event.DefaultUnixTime holds the default value on creation for the unixTime field.
	event.DefaultUnixTime = eventDescUnixTime.Default.(int)
	// event.UnixTimeValidator is a validator for the "unixTime" field. It is called by the builders before save.
	event.UnixTimeValidator = eventDescUnixTime.Validators[0].(func(int) error)
	// eventDescEventName is the schema descriptor for eventName field.
	eventDescEventName := eventFields[1].Descriptor()
	// event.DefaultEventName holds the default value on creation for the eventName field.
	event.DefaultEventName = eventDescEventName.Default.(string)
	// eventDescIsSilent is the schema descriptor for isSilent field.
	eventDescIsSilent := eventFields[2].Descriptor()
	// event.DefaultIsSilent holds the default value on creation for the isSilent field.
	event.DefaultIsSilent = eventDescIsSilent.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescUUID is the schema descriptor for uuid field.
	userDescUUID := userFields[2].Descriptor()
	// user.DefaultUUID holds the default value on creation for the uuid field.
	user.DefaultUUID = userDescUUID.Default.(func() uuid.UUID)
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescElevated is the schema descriptor for elevated field.
	userDescElevated := userFields[4].Descriptor()
	// user.DefaultElevated holds the default value on creation for the elevated field.
	user.DefaultElevated = userDescElevated.Default.(bool)
}
